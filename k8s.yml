apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: backend
    name: backend
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    selector:
      io.kompose.service: backend
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: database
    name: database
  spec:
    ports:
    - name: "8888"
      port: 8888
      targetPort: 27017
    selector:
      io.kompose.service: database
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    type: LoadBalancer
    ports:
    - name: "8081"
      port: 8081
      targetPort: 80
    selector:
      io.kompose.service: frontend
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: backend
    name: backend
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: backend
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o k8s.yml
          kompose.version: 1.21.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: backend
      spec:
        containers:
        - env:
          - name: DB_CONNECTION
            value: DB_CONNECTION=mongodb://root:LSuFDaaenPfdVMi4S@database:8888/online-shop?authSource=admin
          - name: JWT_KEY
            value: '5AE34D147B8ADA82FB2FAA85DEC52'
          - name: PORT
            value: "8080"
          image: drinkler/microservices-backend:latest
          imagePullPolicy: "Always"
          name: backend
          ports:
          - containerPort: 8080
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: database
    name: database
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: database
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o k8s.yml
          kompose.version: 1.21.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: database
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_DATABASE
            valueFrom:
              configMapKeyRef:
                key: MONGO_INITDB_DATABASE
                name: database-database-env
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: MONGO_INITDB_ROOT_PASSWORD
                name: database-database-env
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              configMapKeyRef:
                key: MONGO_INITDB_ROOT_USERNAME
                name: database-database-env
          image: mongo:4.2.5
          imagePullPolicy: "Always"
          name: database-mongo
          ports:
          - containerPort: 27017
          resources: {}
          volumeMounts:
          - mountPath: /data/db
            name: mongodata
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: mongodata
          persistentVolumeClaim:
            claimName: mongodata
  status: {}
- apiVersion: v1
  data:
    MONGO_INITDB_DATABASE: online-shop
    MONGO_INITDB_ROOT_PASSWORD: LSuFDaaenPfdVMi4S
    MONGO_INITDB_ROOT_USERNAME: root
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: database-database-database-env
    name: database-database-env
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: mongodata
    name: mongodata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -o k8s.yml
      kompose.version: 1.21.0 ()
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: frontend
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -o k8s.yml
          kompose.version: 1.21.0 ()
        creationTimestamp: null
        labels:
          io.kompose.service: frontend
      spec:
        containers:
        - image: drinkler/microservices-frontend:latest
          imagePullPolicy: "Always"
          name: frontend-angular
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
kind: List
metadata: {}

